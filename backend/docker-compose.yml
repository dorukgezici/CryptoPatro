name: cryptopatro-backend

x-env-variables:
  - &PROJECT cryptopatro

x-backend-common: &backend-common
  depends_on:
    - postgres
    - rabbitmq
  image: cryptopatro:development
  build: .
  volumes:
    - ./cryptopatro:/app/cryptopatro
    - ./fixtures:/app/fixtures
    - ./locale:/app/locale
    - ./scripts:/app/scripts
  env_file: .env
  environment: &backend-common-environment
    CRYPTOPATRO_STAGE: development
    CRYPTOPATRO_BACKEND_URL: http://localhost:8000
    # PostgreSQL
    CRYPTOPATRO_POSTGRESQL_HOST: postgres
    CRYPTOPATRO_POSTGRESQL_DATABASE: *PROJECT
    CRYPTOPATRO_POSTGRESQL_PORT: 5432
    CRYPTOPATRO_POSTGRESQL_USER: *PROJECT
    CRYPTOPATRO_POSTGRESQL_PASSWORD: *PROJECT
    # RabbitMQ
    CRYPTOPATRO_RABBITMQ_HOST: rabbitmq
    CRYPTOPATRO_RABBITMQ_VHOST: *PROJECT
    CRYPTOPATRO_RABBITMQ_PORT: 5672
    CRYPTOPATRO_RABBITMQ_USER: *PROJECT
    CRYPTOPATRO_RABBITMQ_PASSWORD: *PROJECT
  tty: true

volumes:
  postgres:

services:
  postgres:
    profiles:
      - infra
    image: postgres:14
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_DB: *PROJECT
      POSTGRES_USER: *PROJECT
      POSTGRES_PASSWORD: *PROJECT
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 5s
      retries: 3

  rabbitmq:
    profiles:
      - infra
    image: rabbitmq:3-management-alpine
    ports:
      - "127.0.0.1:5672:5672"
      - "127.0.0.1:15672:15672"
    environment:
      RABBITMQ_DEFAULT_VHOST: *PROJECT
      RABBITMQ_DEFAULT_USER: *PROJECT
      RABBITMQ_DEFAULT_PASS: *PROJECT
    healthcheck:
      test: ["CMD", "curl", "-f", "http://rabbitmq:15672"]
      interval: 30s
      timeout: 5s
      retries: 3

  api:
    <<: *backend-common
    profiles:
      - api
    depends_on:
      - postgres
      - rabbitmq
    environment:
      <<: *backend-common-environment
      CRYPTOPATRO_CONTAINER_KIND: api
    ports:
      - "127.0.0.1:8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://api"]
      interval: 30s
      timeout: 5s
      retries: 3

  scheduler:
    <<: *backend-common
    profiles:
      - infra
    environment:
      <<: *backend-common-environment
      CRYPTOPATRO_CONTAINER_KIND: scheduler

  worker:
    <<: *backend-common
    profiles:
      - infra
    environment:
      <<: *backend-common-environment
      CRYPTOPATRO_CONTAINER_KIND: worker

  bot:
    <<: *backend-common
    profiles:
      - bot
    environment:
      <<: *backend-common-environment
      CRYPTOPATRO_CONTAINER_KIND: bot
