version: "3.9"

x-env-variables:
  - &PROJECT crypto-adiutor

x-backend-common: &backend-common
  image: crypto-adiutor
  build: .
  volumes:
    - ./adiutor:/adiutor/adiutor
    - ./fixtures:/adiutor/fixtures
    - ./locale:/adiutor/locale
    - ./scripts:/adiutor/scripts
  env_file: .env
  environment: &backend-common-environment
    ADIUTOR_STAGE: development
    ADIUTOR_BACKEND_URL: http://127.0.0.1:8000
    # PostgreSQL
    ADIUTOR_POSTGRESQL_HOST: postgres
    ADIUTOR_POSTGRESQL_DATABASE: *PROJECT
    ADIUTOR_POSTGRESQL_PORT: 5432
    ADIUTOR_POSTGRESQL_USER: *PROJECT
    ADIUTOR_POSTGRESQL_PASSWORD: *PROJECT
    # RabbitMQ
    ADIUTOR_RABBITMQ_HOST: rabbitmq
    ADIUTOR_RABBITMQ_VHOST: *PROJECT
    ADIUTOR_RABBITMQ_PORT: 5672
    ADIUTOR_RABBITMQ_USER: *PROJECT
    ADIUTOR_RABBITMQ_PASSWORD: *PROJECT
  tty: true

volumes:
  postgres:

services:
  postgres:
    image: postgres:13-alpine
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 127.0.0.1:5432:5432
    environment:
      POSTGRES_DB: *PROJECT
      POSTGRES_USER: *PROJECT
      POSTGRES_PASSWORD: *PROJECT
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 30s
      timeout: 5s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 127.0.0.1:5672:5672
      - 127.0.0.1:15672:15672
    environment:
      RABBITMQ_DEFAULT_VHOST: *PROJECT
      RABBITMQ_DEFAULT_USER: *PROJECT
      RABBITMQ_DEFAULT_PASS: *PROJECT
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://rabbitmq:15672" ]
      interval: 30s
      timeout: 5s
      retries: 3

  api:
    <<: *backend-common
    depends_on:
      - postgres
      - rabbitmq
    environment:
      <<: *backend-common-environment
      ADIUTOR_CONTAINER_KIND: api
    ports:
      - 127.0.0.1:8000:80
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://api" ]
      interval: 30s
      timeout: 5s
      retries: 3

  scheduler:
    <<: *backend-common
    environment:
      <<: *backend-common-environment
      ADIUTOR_CONTAINER_KIND: scheduler

  worker:
    <<: *backend-common
    environment:
      <<: *backend-common-environment
      ADIUTOR_CONTAINER_KIND: worker
