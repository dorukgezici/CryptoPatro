---
import { ViewTransitions } from "astro:transitions";
import { Header } from "@/components/header";
import { Sidebar } from "@/components/sidebar";
import "@/styles/globals.css";

interface Props {
    title: string;
}

const { title } = Astro.props;
---

<script is:inline>
    const getThemePreference = () => {
        if (
            typeof localStorage !== "undefined" &&
            localStorage.getItem("theme")
        ) {
            return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
    };
    const isDark = getThemePreference() === "dark";
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");

    if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
            const isDark = document.documentElement.classList.contains("dark");
            localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
            attributes: true,
            attributeFilter: ["class"],
        });
    }
</script>

<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content="CryptoPatro" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
        <ViewTransitions />
    </head>
    <body>
        <div class="grid min-h-screen w-full lg:grid-cols-[280px_1fr]">
            <Sidebar client:load url={Astro.url} />
            <div class="flex flex-col">
                <Header client:load />
                <main class="flex flex-1 flex-col gap-4 p-4 md:gap-8 md:p-6">
                    <slot />
                </main>
            </div>
        </div>
    </body>
</html>
